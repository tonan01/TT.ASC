
@using Kendo.Mvc.UI
@using TT.DoAn.Models
@{
    ViewBag.Title = "GetDanhSachPhieuThu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class='card'>
    <div class='card-header'>
        <h1>Quản Lý Phiếu Thu</h1>
    </div>
</div>
<div class="row">
    <div class="col-3">

    </div>
    <div class="col-3">

    </div>
    <div class="col-3">

    </div>
    <div class="col-3">
        <div class="k-d-flex k-justify-content-center" style="padding-top: 54px;">
            <div class="k-w-300">
                <label for="datetimepicker">Thời gian:</label>
                @(Html.Kendo().DateTimePicker()
                  .Name("datetimepicker")
                  .HtmlAttributes(new { style = "width:100%;", accesskey = "w" })
                )
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <!-- Số Thứ Tự home bảo-->
        <script type="text/javascript">
            var rowNumber = 0;
            function resetRowNumber(e) {
                rowNumber = 0;
            }
            function renderNumber(data) {
                return ++rowNumber;
            }
            function renderRecordNumber(data) {
                var page = parseInt($("#home").data("kendoGrid").dataSource.page()) - 1;
                var pagesize = $("#home").data("kendoGrid").dataSource.pageSize();
                return parseInt(rowNumber + (parseInt(page) * parseInt(pagesize)));
            }
            //đổi icon trạng thái
            function templateFunction(item) {
                if (item.TrangThai == "Thành công") {
                    return "<span class='trangthai_thanhcong_icon'></span> <span class='trangthai-text' > " + item.TrangThai + "</span > ";
                }
                else {
                    return "<span class='trangthai_huy_icon'></span> <span class='trangthai-text' > " + item.TrangThai + "</span > ";
                }
                return item.TrangThai;
            }
        </script>
        @(Html.Kendo().Grid <sp_DanhSachQuanLyThuResult>()
                            .Name("home")
                            .Columns(columns =>
                            {
                                columns.Template(p => { }).Title("STT").ClientTemplate("#= renderNumber(data) #").Hidden();
                                columns.Template(p => { }).Title("STT").ClientTemplate("#= renderRecordNumber(data) #").Width(38)
                                    .HtmlAttributes(new { style = "text-align: center" })
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.SoPhieu).Title("Số phiếu").HtmlAttributes(new { style = "text-align: center" }).Width(112)
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.mssv).Title("MSSV").HtmlAttributes(new { style = "text-align: center" })
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.NoiDung).Title("Nội dung thu")
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.SoTienThu).Title("Số tiền thu (VNĐ)")
                                    .ClientFooterTemplate("Tổng Tiền: #= kendo.format('{0:n3}', sum)#")
                                    .FooterHtmlAttributes(new { style = "text-align: right; color: red" })//footer
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" })//header
                                    .HtmlAttributes(new { style = "text-align: right" }).Format("{0:n3}");
                                columns.Bound(p => p.NgayThanhToan).Title("Ngày thanh toán").Format("{0:d/M/yyyy HH:mm:ss}").HtmlAttributes(new { style = "text-align: center" })
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.TrangThai).ClientTemplate("#= templateFunction(data) #").Title("Trạng thái giao dịch")
                                    .HtmlAttributes(new { style = "display: flex;align-items: center;line-height: 26px;" })
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                //columns.Command(command => command.Edit()).Width(150);
                                columns.Command(command => command.Destroy()).Width(150)
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });

                                // columns.Command(command => command.Custom("Chi Tiết").Click("showDetails"));
                            }).HtmlAttributes(new { style = "align-items: center;" })

                            .ToolBar(toolbar =>
                            {
                                //toolbar.Create();
                                //toolbar.Save();
                                toolbar.Pdf();
                                toolbar.Search();

                            })
                            .Pdf(pdf => pdf
                            //.AllPages()
                            .AvoidLinks()
                            .PaperSize("A1")
                            .Margin("2cm", "1cm", "1cm", "1cm")
                            .Landscape()
                            .RepeatHeaders()
                            .TemplateId("page-template")
                            .FileName("QuanLyPhieuThu.pdf")
                            .ProxyURL(Url.Action("PdfExport", "Grid"))
                            )
                            //.Editable(editable => editable.Mode(GridEditMode.InLine))
                            //.Pageable()
                            .Pageable(pager => pager.AlwaysVisible(false).PageSizes(new List<object> { 5, 10, 20, 100 }))
                            .Reorderable(reorderable => reorderable.Columns(true))// có thể thay đổi thứ tự colum
                            .Resizable(resizable => resizable.Columns(true))//có thể chỉnh size colum
                            .Sortable()
                            .Scrollable()
                            .Filterable()
                            .Navigatable()
                            .ClientDetailTemplateId("chitiet")//click
                            .Groupable()//cho nhóm các lưới lại vs nhau
                            .HtmlAttributes(new { style = "height:550px;" })
                            .DataSource(dataSource => dataSource
                                .WebApi()
                                .Batch(false)
                                .PageSize(5)
                                .Aggregates(total=>
                                {
                                    total.Add(p => p.SoTienThu).Sum();//tính tổng
                                })
                                .ServerOperation(false)
                                .Model(model => {
                                    model.Id(gangster => gangster.SoPhieu);
                                    model.Field(gangster => gangster.SoPhieu).Editable(false);
                                })
                                .Read(read => read.Action("Read_DanhSachPhieuThu", "Home", new { pTrangThai = "%%" }))
                                //.Create(create => create.Action("ClientCreate", "Grid").Type(HttpVerbs.Post))
                                //.Update(update => update.Action("ClientsEdit", "Grid", new {id = "{0}"}).Type(HttpVerbs.Post))
                                .Destroy(destroy => destroy.Action("DeletePhieuThu", "Home", new { pSoPhieu = "{0}"}).Type(HttpVerbs.Post))
                            )
                            .Events(events => events.DataBound("dataBound"))
                            .Events(events => events.DataBound("resetRowNumber"))
        )
        <!--Số thứ thự chi tiết-->
        <script>
            function(response) {
                for (var i = 0; i < response.d.results.length; i++) {
                    response.d.results[i].index = i + 1;
                }
                return response;
            }
        </script>
        <!--Chi Tiết-->
        <script id="chitiet" type="text/kendo-tmpl">
            @(Html.Kendo().Grid<sp_ChiTietPhieuThuResult>()
                .Name("chitietphieuthu_#=SoPhieu#") // template expression, to be evaluated in the master context
                .Columns(columns =>
                {
                    columns.Template(p => { }).Title("STT").ClientTemplate("#= ++response #").Width(38)
                        .HtmlAttributes(new { style = "text-align: center" })
                        .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                    columns.Bound(o => o.MaMH).Title("Mã");
                    columns.Bound(o => o.NoiDung).Title("Nội dung");
                    columns.Bound(o => o.DonGia).Title("Số tiền (VNĐ)").Format("{0:n3}");
                })
                .Pageable()
                .Navigatable()
                .Sortable()
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    .Read(read => read.Action("Read_DanhSachChiTietPhieuThu", "Home", new { pSoPhieu = "#=SoPhieu#" }))

                )
                .Events(ev => ev.DataBound("resetRowNumber_CT"))

                .ToClientTemplate()


            )

        </script>
        <script>
            //Số thứ tự

            function dataBound() {
                this.expandRow(this.tbody.find("tr.k-master-row").first());
            }
        </script>
    </div>
</div>
