
@using Kendo.Mvc.UI
@using TT.DoAn.Models
@using TT.DoAn.ViewModel
@{
    ViewBag.Title = "GetDanhSachPhieuThu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class='card'>
    <div class='card-header'>
        <h1>Quản Lý Phiếu Thu</h1>
    </div>
</div>
<div class="row">
    <div class="col-3">
        <button type="button" id="btn_InPhieuThu" class="btn btn-info" style="margin-top: 72px;"><i class="fa-regular fa-file-pdf"></i> In Phiếu thu</button>
    </div>
    <!--Start Chọn Trạng Thái -->
    <div class="col-3">
        @(Html.Kendo().DropDownList()
            .Name("kendodropdownlist")
            .HtmlAttributes(new { style = "width:100%" })
            .OptionLabel("Chọn trạng thái...")
            .DataTextField("TrangThai")
            .DataValueField("TrangThai")
            .Height(200)
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("Read_TrangThaiPhieuThu", "Home");
                });
            })
            .Events(e => e
                .Change("onChange")
                )
        )
    </div>


    <!--End Chọn Trạng Thái -->



    <div class="col-3">

    </div>
    <div class="col-3">
        <div class="k-d-flex k-justify-content-center" style="padding-top: 54px;">
            <div class="k-w-300">
                <label for="datetimepicker">Thời gian:</label>
                @(Html.Kendo().DateTimePicker()
                  .Name("datetimepicker")
                  .HtmlAttributes(new { style = "width:100%;", accesskey = "w" })
                )
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <script type="text/javascript">
            //Start Số Thứ Tự home
            var rowNumber = 0;
            function resetRowNumber(e) {
                rowNumber = 0;
            }
            function renderNumber(data) {
                return ++rowNumber;
            }
            function renderRecordNumber(data) {
                var page = parseInt($("#home").data("kendoGrid").dataSource.page()) - 1;
                var pagesize = $("#home").data("kendoGrid").dataSource.pageSize();
                return parseInt(rowNumber + (parseInt(page) * parseInt(pagesize)));
            }
            //End Số Thứ Tự home

            // Start đổi icon trạng thái
            function templateFunction(item) {
                if (item.TrangThai == "Thành công") {
                    return "<span class='trangthai_thanhcong_icon'></span> <span class='trangthai-text' > " + item.TrangThai + "</span > ";
                }
                else {
                    return "<span class='trangthai_huy_icon'></span> <span class='trangthai-text' > " + item.TrangThai + "</span > ";
                }
                return item.TrangThai;
            }
            // End đổi icon trạng thái
        </script>
        <!--Combobox-->
        <script>
       function onChange() {
           var TrangThai = $("#kendodropdownlist").data("kendoDropDownList").value();
           if (TrangThai != "Chọn trạng thái...") {
                $(function () {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Read_Change_TrangThai_DanhSachPhieuThu", "Home")",
                        data: { pTrangThai: "%" + TrangThai + "%" },
                        success: function (result) {
                            $("#home").data("kendoGrid").dataSource.data(result);
                        }
                    });
                });
            }
            else {
                $(function () {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Read_Change_TrangThai_DanhSachPhieuThu", "Home")",
                        data: { pTrangThai: "%%" },
                        success: function (result) {
                            $("#home").data("kendoGrid").dataSource.data(result);
                        }
                    });
                });
            }

        }
        </script>
        <!--Start HIện phiếu thu-->
        @(Html.Kendo().Grid <sp_DanhSachQuanLyThuResult>()
                            .Name("home")
                            .Columns(columns =>
                            {
                                columns.Template(p => { }).Title("STT").ClientTemplate("#= renderNumber(data) #").Hidden();
                                columns.Template(p => { }).Title("STT").ClientTemplate("#= renderRecordNumber(data) #").Width(38)
                                    .HtmlAttributes(new { style = "text-align: center" })
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.SoPhieu).Title("Số phiếu").HtmlAttributes(new { style = "text-align: center" }).Width(112)
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.mssv).Title("MSSV").HtmlAttributes(new { style = "text-align: center" })
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.NoiDung).Title("Nội dung thu")
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.SoTienThu).Title("Số tiền thu (VNĐ)").Width(195)
                                    .ClientFooterTemplate("Tổng Tiền: #= kendo.format('{0:n3}', sum)#")
                                    .FooterHtmlAttributes(new { style = "text-align: right; color: red" })//footer
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" })//header
                                    .HtmlAttributes(new { style = "text-align: right" }).Format("{0:##,#}");
                                columns.Bound(p => p.NgayThanhToan).Title("Ngày thanh toán").Format("{0:d/M/yyyy HH:mm:ss}").HtmlAttributes(new { style = "text-align: center" })
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                columns.Bound(p => p.TrangThai).ClientTemplate("#= templateFunction(data) #").Title("Trạng thái giao dịch")
                                    .HtmlAttributes(new { style = "display: flex;align-items: center;line-height: 26px;" })
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                                //columns.Command(command => { command.Destroy(); command.Edit(); }).Width(150);
                                columns.Command(command => command.Destroy()).Width(150).Exportable(false)
                                    .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                            }).HtmlAttributes(new { style = "align-items: center;" })

                            .ToolBar(toolbar =>
                            {
                                //toolbar.Create();
                                //toolbar.Save();
                                toolbar.Pdf();
                                toolbar.Search();

                            })
                            .Pdf(pdf => pdf
                            //.AllPages()
                            .AvoidLinks()
                            .PaperSize("A1")
                            .Margin("2cm", "1cm", "1cm", "1cm")
                            .Landscape()
                            .RepeatHeaders()
                            .TemplateId("page-template")
                            .FileName("QuanLyPhieuThu.pdf")
                            .ProxyURL(Url.Action("PdfExport", "Grid"))
                            )
                            //.Editable(editable => editable.Mode(GridEditMode.InLine))
                            //.Pageable()
                            .Pageable(pager => pager.AlwaysVisible(false).PageSizes(new List<object> { 5, 10, 20, 100 }))
                            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
                            .Reorderable(reorderable => reorderable.Columns(true))// có thể thay đổi thứ tự colum
                            .Resizable(resizable => resizable.Columns(true))//có thể chỉnh size colum
                            .Sortable()
                            .Scrollable()
                            .Filterable()
                            .Navigatable()
                            .ClientDetailTemplateId("chitiet")//click
                            .Groupable()//cho nhóm các lưới lại vs nhau
                            .HtmlAttributes(new { style = "height:550px;" })
                            .DataSource(dataSource => dataSource
                                .WebApi()
                                .Batch(false)
                                .PageSize(5)
                                .Aggregates(total=>
                                {
                                    total.Add(p => p.SoTienThu).Sum();//tính tổng
                                })
                                .ServerOperation(false)
                                .Model(model => {
                                    model.Id(gangster => gangster.SoPhieu);
                                    model.Field(gangster => gangster.SoPhieu).Editable(false);
                                })
                                .Read(read => read.Action("Read_DanhSachPhieuThu", "Home", new { pTrangThai = "%Thành công%" }))
                                //.Create(create => create.Action("ClientCreate", "Grid").Type(HttpVerbs.Post))
                                //.Update(update => update.Action("ClientsEdit", "Grid", new {id = "{0}"}).Type(HttpVerbs.Post))
                                .Destroy(destroy => destroy.Action("DeletePhieuThu", "Home", new { pSoPhieu = "{0}"}).Type(HttpVerbs.Post))

                            )
                            .Events(events => events.DataBound("dataBound"))
                            .Events(events => events.DataBound("resetRowNumber"))
        )
        <!--End HIện phiếu thu-->
        <!--Start In pdf-->
        <script>
            $(function () {$('#btn_InPhieuThu').on('click', function () {
            var grid = $("#home").data("kendoGrid");
            let selected = grid.select(); //row selected
            if (selected.length === 0) {
                kendo.alert("Vui lòng chọn phiếu thu trước khi in phiếu thu");
            }
            else {
                var selectedItem = grid.dataItem(grid.select());
                var SoPhieu = selectedItem.SoPhieu;
                //var soPhieu = selectedItem.soPhieu;
                $.ajax({
                type: "POST",
                    url: "@Url.Action("Export", "Home")",
                    data: { pSoPhieu : SoPhieu },
                    success: function () {
                        kendo.alert('Tải Thành công')
                }
                });
            }
        });})
        </script>
        <!--End In pdf-->
        <!--Start Chi Tiết-->
        <script id="chitiet" type="text/kendo-tmpl">
            @(Html.Kendo().Grid<ChiTietPhieuThu>()
                .Name("chitietphieuthu_#=SoPhieu#") // template expression, to be evaluated in the master context
                .Columns(columns =>
                {
                    columns.Bound(p => p.STT).Title("STT").Width(38)
                        .HtmlAttributes(new { style = "text-align: center" })
                        .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });
                    columns.Bound(o => o.MaMH).Title("Mã").Width(195)
                        .HtmlAttributes(new { style = "text-align: center" })
                        .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });//header;
                    columns.Bound(o => o.NoiDung).Title("Nội dung")
                        .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });//header;
                    columns.Bound(o => o.DonGia).Title("Số tiền (VNĐ)").Format("{0:n3}")
                        .HtmlAttributes(new { style = "text-align: right" })
                        .HeaderHtmlAttributes(new { style = "text-align: center; justify-content: center" });//header;
                })
                .Pageable()
                .Navigatable()
                .Sortable()
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    .Read(read => read.Action("Read_DanhSachChiTietPhieuThu", "Home", new { pSoPhieu = "#=SoPhieu#" }))

                )
                .ToClientTemplate()


            )
        </script>


        <!--End Chi Tiết-->
        <script>
            // Start Số thứ tự
            function dataBound() {
                this.expandRow(this.tbody.find("tr.k-master-row").first());
            }
                            // End Số thứ tự
        </script>
    </div>
</div>
